#!/usr/bin/env python3
"""
–†—É—á–Ω–æ–π —Ç–µ—Å—Ç —Ç–æ–∫–µ–Ω–∞ - –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
"""
import asyncio
import aiohttp

async def test_manual_token():
    print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ (–∏–ª–∏ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
    token = input().strip()
    
    if token.lower() == 'q' or not token:
        return
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –¥–ª–∏–Ω–æ–π {len(token)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üîç –¢–æ–∫–µ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {token[:20]}...")
    
    url = f"https://api.telegram.org/bot{token}/getMe"
    
    async with aiohttp.ClientSession() as session:
        try:
            async with session.get(url, timeout=aiohttp.ClientTimeout(total=10)) as response:
                if response.status == 200:
                    data = await response.json()
                    if data.get("ok"):
                        bot_info = data.get("result", {})
                        print(f"‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                        print(f"üì± –ë–æ—Ç: @{bot_info.get('username')} ({bot_info.get('first_name')})")
                        print(f"üÜî ID: {bot_info.get('id')}")
                        
                        # –°–æ—Ö—Ä–∞–Ω–∏–º —Ä–∞–±–æ—á–∏–π —Ç–æ–∫–µ–Ω –≤ .env —Ñ–∞–π–ª
                        with open('.env', 'w') as f:
                            f.write(f"BOT_TOKEN={token}\n")
                            f.write(f"MAIN_ADMIN_ID=545921\n")
                            f.write(f"REQUIRED_CHANNEL_ID=-1002429972793\n")
                            f.write(f"REQUIRED_GROUP_ID=-1002442392045\n")
                        print("üíæ –†–∞–±–æ—á–∏–π —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ .env —Ñ–∞–π–ª")
                        return True
                elif response.status == 401:
                    print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω (401 Unauthorized)")
                else:
                    print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status}")
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return False

if __name__ == "__main__":
    print("üöÄ –†—É—á–Ω–æ–π —Ç–µ—Å—Ç —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞")
    asyncio.run(test_manual_token())