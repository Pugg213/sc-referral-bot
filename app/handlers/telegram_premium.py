"""
Telegram Premium Handler - –ø–æ–∫—É–ø–∫–∞ Telegram Premium —á–µ—Ä–µ–∑ Rhombis API
"""
import logging
import json
from aiogram import Router, types, F
from aiogram.filters import Command

from app.context import get_config, get_db
from app.services.rhombis_stars_api import get_rhombis_stars_api, RHOMBIS_STARS_PRODUCTS

logger = logging.getLogger(__name__)
router = Router()

@router.message(F.web_app_data)
async def handle_telegram_premium_purchase(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ Telegram Premium —á–µ—Ä–µ–∑ TMA"""
    if not message.from_user or not message.web_app_data:
        return
    
    try:
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Web App
        data = json.loads(message.web_app_data.data)
        
        if data.get("action") != "buy_telegram_premium":
            return
            
        user_id = message.from_user.id
        plan_id = data.get("plan_id")
        stars_price = data.get("stars_price")
        user_data = data.get("user_data", {})
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–ª–∞–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        telegram_premium_plan = None
        for plan in RHOMBIS_STARS_PRODUCTS["telegram_premium"]:
            if plan["id"] == plan_id:
                telegram_premium_plan = plan
                break
        
        if not telegram_premium_plan:
            await message.answer("‚ùå –ü–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–∫—É–ø–∫—É —á–µ—Ä–µ–∑ Rhombis API
        rhombis_api = get_rhombis_stars_api()
        
        try:
            purchase_response = await rhombis_api.purchase_telegram_premium({
                "telegram_id": user_id,
                "username": user_data.get("username", ""),
                "first_name": user_data.get("first_name", ""),
                "last_name": user_data.get("last_name", ""),
                "duration_months": telegram_premium_plan["duration_months"],
                "stars_price": stars_price,
                "features": telegram_premium_plan["features"]
            })
            
            if purchase_response.get("success"):
                # –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞
                success_text = (
                    f"üéâ <b>Telegram Premium –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>\n\n"
                    f"üì¶ <b>–ü–ª–∞–Ω:</b> {telegram_premium_plan['title']}\n"
                    f"‚è∞ <b>–°—Ä–æ–∫:</b> {telegram_premium_plan['duration_months']} –º–µ—Å.\n"
                    f"‚≠ê <b>–ü–æ—Ç—Ä–∞—á–µ–Ω–æ:</b> {stars_price} Stars\n\n"
                    f"üöÄ <b>–í–∞—à–∏ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
                )
                
                for feature in telegram_premium_plan["features"][:4]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 4 —Ñ—É–Ω–∫—Ü–∏–∏
                    success_text += f"‚úÖ {feature}\n"
                
                success_text += f"\nüí´ –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å Telegram Premium!"
                
                await message.answer(success_text, parse_mode="HTML")
                
            else:
                error_msg = purchase_response.get("error", "Unknown error")
                await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Premium: {error_msg}")
                
        except Exception as e:
            logger.error(f"Rhombis API error for Telegram Premium: {e}")
            await message.answer("‚ùå –í—Ä–µ–º–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            
    except json.JSONDecodeError:
        logger.error("Invalid JSON data from Web App")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
    except Exception as e:
        logger.error(f"Telegram Premium purchase error: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ Premium")

@router.message(Command("telegram_premium"))
async def show_telegram_premium_options(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ü–∏–∏ Telegram Premium"""
    if not message.from_user:
        return
    
    premium_text = (
        f"üì± <b>Telegram Premium</b>\n\n"
        f"–ü–æ–ª—É—á–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Telegram:\n\n"
        f"üî• <b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
        f"‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–æ 2GB\n"
        f"‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏\n"
        f"‚Ä¢ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–∞ –≤ —Ç–µ–∫—Å—Ç\n"
        f"‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã –∏ —Ä–µ–∞–∫—Ü–∏–∏\n"
        f"‚Ä¢ –ë–µ–∑ —Ä–µ–∫–ª–∞–º—ã –≤ –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö\n"
        f"‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
        f"üí´ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–∞–Ω—ã:</b>\n\n"
    )
    
    for plan in RHOMBIS_STARS_PRODUCTS["telegram_premium"]:
        popular_mark = " üî•" if plan.get("popular") else ""
        premium_text += (
            f"üì¶ <b>{plan['title']}</b>{popular_mark}\n"
            f"üí´ {plan['stars_price']} Stars\n"
            f"‚è∞ {plan['duration_months']} –º–µ—Å.\n\n"
        )
    
    premium_text += f"üåü –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /webapp –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    
    await message.answer(premium_text, parse_mode="HTML")

@router.message(Command("webapp"))
async def show_webapp_button(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Web App"""
    if not message.from_user:
        return
    
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(
            text="üåü –û—Ç–∫—Ä—ã—Ç—å SC Store", 
            web_app=types.WebAppInfo(url="https://your-replit-url.replit.app/simple_tma.html")
        )]
    ])
    
    await message.answer(
        "üåü <b>SC Store - Premium Services</b>\n\n"
        "–ö—É–ø–∏—Ç–µ Telegram Premium –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–µ–º–∏—É–º —É—Å–ª—É–≥–∏ —á–µ—Ä–µ–∑ —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:",
        reply_markup=keyboard,
        parse_mode="HTML"
    )