"""
Mini App handler –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ TMA –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
"""
import logging
from aiogram import Router, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.enums import ChatType

from app.context import get_config

router = Router()

@router.message(F.text == "‚≠ê Stars Store", F.chat.type == ChatType.PRIVATE)
async def stars_store_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ Stars Store - –ø—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ TMA"""
    try:
        # TMA URL - –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç 5001
        import os
        replit_domains = os.getenv('REPLIT_DOMAINS', '')
        if replit_domains:
            domain = replit_domains.split(',')[0]
            # TMA –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –ø–æ—Ä—Ç—É –¥–ª—è compatibility 
            tma_url = f"https://{domain}"
        else:
            # Fallback –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            tma_url = "http://localhost:5000"
        
        # Create Web App button for direct launch
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚≠ê –û—Ç–∫—Ä—ã—Ç—å Stars Store",
                    web_app=WebAppInfo(url=tma_url)
                )
            ]
        ])
        
        store_text = """‚≠ê <b>Telegram Stars Store</b>

üõí –ü–æ–∫—É–ø–∞–π—Ç–µ Stars —á–µ—Ä–µ–∑ TON –±–ª–æ–∫—á–µ–π–Ω!

<b>üí´ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:</b>
‚Ä¢ 50 Stars - —Å—Ç–∞—Ä—Ç–æ–≤—ã–π 
‚Ä¢ 100 Stars - –ø–æ–ø—É–ª—è—Ä–Ω—ã–π
‚Ä¢ 250 Stars - –≤—ã–≥–æ–¥–Ω—ã–π
‚Ä¢ 500 Stars - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π

<b>üî• –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>
‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ Stars
‚Ä¢ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ TON –∫–æ—à–µ–ª–µ–∫
‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Stars –≤ –ª—é–±—ã—Ö –±–æ—Ç–∞—Ö

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞!"""
        
        await message.answer(
            store_text,
            reply_markup=keyboard,
            parse_mode="HTML"
        )
        
    except Exception as e:
        logging.error(f"Stars store handler error: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞")

@router.callback_query(F.data == "show_balance")
async def show_balance_callback(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        await callback.answer()
        
        from app.context import get_db
        db = get_db()
        user = db.get_user(callback.from_user.id)
        
        if user:
            balance_text = f"""üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å</b>

üíé SC –¢–æ–∫–µ–Ω—ã: {user.get('balance', 0):.2f}
üìä –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {user.get('total_earnings', 0):.2f}
üéÅ –ö–∞–ø—Å—É–ª –æ—Ç–∫—Ä—ã—Ç–æ: {user.get('total_referrals', 0)}
üë• –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: {user.get('validated_referrals', 0)}"""
        else:
            balance_text = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
            
        if callback.message:
            await callback.message.answer(balance_text, parse_mode="HTML")
        
    except Exception as e:
        logging.error(f"Show balance error: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞", show_alert=True)

@router.callback_query(F.data == "purchase_history")
async def purchase_history_callback(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫ Stars"""
    try:
        await callback.answer()
        
        from app.context import get_db
        db = get_db()
        
        # Simplified purchase history (no database table needed)
        purchases = []  # Empty for now
        
        if purchases:
            history_text = "üõí <b>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ Stars</b>\n\n"
            for product_id, stars, date in purchases:
                history_text += f"üì¶ {product_id}\nüí∞ {stars} ‚≠ê - {date[:10]}\n\n"
        else:
            history_text = "üõí <b>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ –ø—É—Å—Ç–∞</b>\n\n–í—ã –µ—â–µ –Ω–µ —Å–æ–≤–µ—Ä—à–∞–ª–∏ –ø–æ–∫—É–ø–æ–∫ Telegram Stars."
            
        if callback.message:
            await callback.message.answer(history_text, parse_mode="HTML")
        
    except Exception as e:
        logging.error(f"Purchase history error: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏", show_alert=True)