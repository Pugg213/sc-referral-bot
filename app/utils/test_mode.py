"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
"""
import os
import logging

def is_test_mode() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≤–∫–ª—é—á–µ–Ω –ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º"""
    return os.getenv("TEST_MODE", "false").lower() == "true"

async def mock_subscription_check(bot, user_id: int, channel_id: str, group_id: str) -> bool:
    """–ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    if not is_test_mode():
        return False
    
    logging.info(f"TEST MODE: Mock subscription check for user {user_id}")
    print(f"üß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú: –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    print(f"   –ö–∞–Ω–∞–ª: {channel_id}")
    print(f"   –ì—Ä—É–ø–ø–∞: {group_id}")
    
    # –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True
    return True