#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∫–∞–ø—Å—É–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã
"""
import sqlite3
from datetime import datetime
import sys

def test_capsule_system():
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ö–ê–ü–°–£–õ")
    print("=" * 40)
    print()
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect('bot.db')
        conn.row_factory = sqlite3.Row
        cursor = conn.cursor()
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("PRAGMA table_info(users)")
        columns = [col[1] for col in cursor.fetchall()]
        required_fields = ['bonus_capsules', 'validated_referrals', 'daily_capsules_opened', 
                          'total_capsules_opened', 'last_capsule_date', 'luck_multiplier']
        
        print("1. –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –ë–ê–ó–´ –î–ê–ù–ù–´–•:")
        for field in required_fields:
            status = "‚úÖ" if field in columns else "‚ùå"
            print(f"   {status} {field}")
        print()
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("SELECT COUNT(*) FROM users")
        user_count = cursor.fetchone()[0]
        print(f"2. –û–ë–©–ï–ï –ö–û–õ–ò–ß–ï–°–¢–í–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô: {user_count}")
        print()
        
        # 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        test_user_id = 999999999
        cursor.execute("DELETE FROM users WHERE user_id = ?", (test_user_id,))
        cursor.execute("""
            INSERT INTO users (user_id, username, first_name, bonus_capsules, validated_referrals)
            VALUES (?, ?, ?, ?, ?)
        """, (test_user_id, 'test_user', 'Test User', 2, 3))
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –ø–æ–¥—Å—á–µ—Ç–∞ –∫–∞–ø—Å—É–ª
        cursor.execute("""
            SELECT bonus_capsules, validated_referrals, daily_capsules_opened
            FROM users WHERE user_id = ?
        """, (test_user_id,))
        user = cursor.fetchone()
        
        if user:
            base_capsules = 1
            referral_capsules = user['validated_referrals']
            bonus_capsules = user['bonus_capsules'] 
            used_today = user['daily_capsules_opened']
            
            total_available = base_capsules + referral_capsules + bonus_capsules - used_today
            
            print("3. –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –ü–û–î–°–ß–ï–¢–ê –ö–ê–ü–°–£–õ:")
            print(f"   ‚úÖ –ë–∞–∑–æ–≤—ã–µ –∫–∞–ø—Å—É–ª—ã: {base_capsules}")
            print(f"   ‚úÖ –ó–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {referral_capsules}")
            print(f"   ‚úÖ –ë–æ–Ω—É—Å–Ω—ã–µ: {bonus_capsules}")
            print(f"   ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è: {used_today}")
            print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ: {total_available}")
            print()
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±—Ä–æ—Å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∫–∞–ø—Å—É–ª
        today = datetime.now().date().isoformat()
        yesterday = "2025-08-17"
        
        cursor.execute("""
            UPDATE users SET last_capsule_date = ?, daily_capsules_opened = 5
            WHERE user_id = ?
        """, (yesterday, test_user_id))
        
        cursor.execute("""
            SELECT last_capsule_date, daily_capsules_opened
            FROM users WHERE user_id = ?
        """, (test_user_id,))
        user = cursor.fetchone()
        
        should_reset = user['last_capsule_date'] != today
        print("4. –¢–ï–°–¢ –°–ë–†–û–°–ê –ï–ñ–ï–î–ù–ï–í–ù–´–• –ö–ê–ü–°–£–õ:")
        print(f"   ‚úÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞: {user['last_capsule_date']}")
        print(f"   ‚úÖ –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞: {today}")
        print(f"   ‚úÖ –ù—É–∂–µ–Ω —Å–±—Ä–æ—Å: {'–î–∞' if should_reset else '–ù–µ—Ç'}")
        print(f"   ‚úÖ –û—Ç–∫—Ä—ã—Ç–æ –≤—á–µ—Ä–∞: {user['daily_capsules_opened']}")
        print()
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("""
            SELECT COUNT(*) as total,
                   COUNT(CASE WHEN bonus_capsules > 0 THEN 1 END) as with_bonus,
                   COUNT(CASE WHEN validated_referrals > 0 THEN 1 END) as with_referrals,
                   COUNT(CASE WHEN total_capsules_opened > 0 THEN 1 END) as opened_capsules
            FROM users WHERE user_id != ?
        """, (test_user_id,))
        stats = cursor.fetchone()
        
        print("5. –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ï–ê–õ–¨–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:")
        print(f"   ‚úÖ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total']}")
        print(f"   ‚úÖ –° –±–æ–Ω—É—Å–Ω—ã–º–∏ –∫–∞–ø—Å—É–ª–∞–º–∏: {stats['with_bonus']}")
        print(f"   ‚úÖ –° —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏: {stats['with_referrals']}")
        print(f"   ‚úÖ –û—Ç–∫—Ä—ã–≤–∞–ª–∏ –∫–∞–ø—Å—É–ª—ã: {stats['opened_capsules']}")
        print()
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("DELETE FROM users WHERE user_id = ?", (test_user_id,))
        conn.commit()
        
        print("üíØ –ò–¢–û–ì:")
        if all(field in columns for field in required_fields):
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–∞–ø—Å—É–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            print("‚úÖ –õ–æ–≥–∏–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            print("‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Å–±—Ä–æ—Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç")
            return True
        else:
            print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –±–∞–∑—ã")
            return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False
    finally:
        conn.close()

if __name__ == "__main__":
    success = test_capsule_system()
    sys.exit(0 if success else 1)